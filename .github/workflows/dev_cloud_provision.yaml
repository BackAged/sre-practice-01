name: dev cloud provision

on:
  push:
    branches:
      - develop
      - "feat/**"
      - "feature/**"
    paths:
      - "cloud-provision/**"
  pull_request:
    branches:
      - develop
    paths:
      - "cloud-provision/**"

env:
  GCLOUD_PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_DEV_SERVICE_KEY }}

jobs:
  setup-google-cloud:
    name: Setup google cloud and authenticate
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/setup-gcloud
        with:
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}

  validate:
    name: validate terraform hcl
    runs-on: ubuntu-latest
    outputs:
      fmt: ${{ steps.fmt.outcome }}
      init: ${{ steps.init.outcome }}
      validate: ${{ steps.validate.outputs.stdout }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate

  plan:
    needs: validate
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
        id: init
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: Terraform plan output PR comment
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ needs.validate.outputs.fmt }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ needs.validate.outputs.validate }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

name: dev cloud provision

on:
  push:
    branches:
      - develop
    paths:
      - "cloud-provision/**"
  pull_request:
    branches:
      - develop
    paths:
      - "cloud-provision/**"

env:
  GITHUB_TOKEN: $${{ secrets.GH_TOKEN }}
  GCLOUD_PROJECT_ID: dev-sre-335217
  GCLOUD_DEV_SERVICE_KEY: ${{ secrets.GCLOUD_DEV_SERVICE_KEY }}
  GOOGLE_APPLICATION_CREDENTIALS: "./key.json"

jobs:
  validate:
    name: validate terraform hcl
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud-provision/dev
    outputs:
      fmt: ${{ steps.fmt.outcome }}
      init: ${{ steps.init.outcome }}
      validate: ${{ steps.validate.outputs.stdout }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate

  plan:
    needs: validate
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud-provision/dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup google cloud service key
        env:
          sk: ${{ env.GCLOUD_DEV_SERVICE_KEY }}
        run: |
          echo "$sk" > ./key.json
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
        id: init
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: Terraform plan output PR comment
        uses: actions/github-script@v5
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ needs.validate.outputs.fmt }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ needs.validate.outputs.validate }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Check on failures
        if: steps.init.outcome != 'success' || steps.plan.outcome != 'success'
        run: exit 1
  
  apply:
    needs: validate
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud-provision/dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup google cloud service key
        env:
          sk: ${{ env.GCLOUD_DEV_SERVICE_KEY }}
        run: |
          echo "$sk" > ./key.json
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
        id: init
      - name: Terraform apply
        id: plan
        run: terraform apply -auto-approve  


